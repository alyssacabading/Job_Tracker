{
	"info": {
		"_postman_id": "34b1ded4-24bc-4044-9a8b-4eee6f79e635",
		"name": "cs467-CRUD testing",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34147747"
	},
	"item": [
		{
			"name": "Jobs",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "201 - Create Job 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
											"});",
											"",
											"const respJSON = pm.response.json();",
											"",
											"// Save the job ID to the environment if it exists",
											"if (respJSON && respJSON._id) {",
											"    pm.environment.set(\"jobId1\", respJSON._id);",
											"    console.log(\"Job ID saved:\", respJSON._id);",
											"} else {",
											"    console.error(\"Job ID not found in the response:\", respJSON);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyName\": \"{{companyName1}}\",\n  \"applicationStatus\": \"{{appStatus1}}\",\n  \"jobType\": \"{{jobType1}}\",\n  \"jobTitle\": \"{{jobTitle1}}\",\n  \"skills\": [\"HTML\", \"CSS\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									]
								},
								"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
							},
							"response": []
						},
						{
							"name": "201 - Create Job 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"jobId2\", respJSON._id);\r",
											"    console.log(\"Job ID saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"Job ID not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{companyName2}}\",\r\n  \"applicationStatus\": \"{{appStatus2}}\",\r\n  \"jobType\": \"{{jobType2}}\",\r\n  \"salary\": {{salary2}},\r\n  \"skills\": [\"Javascript\", \"Google Cloud\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "201 - Create Job 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"jobId3\", respJSON._id);\r",
											"    console.log(\"Job ID saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"Job ID not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"Company Incorporated\",\r\n  \"applicationStatus\": \"Interviewing\",\r\n  \"jobType\": \"Temporary\",\r\n  \"jobTitle\": \"Software Engineer\",\r\n  \"skills\": [\"HTML\", \"CSS\", \"Python\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid Job - enums + jobTitle fail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"jobId3\", respJSON._id);\r",
											"    console.log(\"Job ID saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"Job ID not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"Worst Company Every\",\r\n  \"applicationStatus\": \"{{invalidAppStatus}}\",\r\n  \"jobType\": \"{{invalidJobType}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid Job - missing name field",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"applicationStatus\": \"{{appStatus2}}\",\r\n  \"jobType\": \"{{jobType2}}\",\r\n  \"jobTitle\": \"{{jobTitle1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid Job - empty name",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"\",\r\n  \"applicationStatus\": \"{{appStatus2}}\",\r\n  \"jobType\": \"{{jobType2}}\",\r\n  \"jobTitle\": \"{{jobTitle2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "GET ALL Jobs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "GET job by jobId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId1}}"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "Query appStatus",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs?applicationStatus={{appStatus1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									],
									"query": [
										{
											"key": "applicationStatus",
											"value": "{{appStatus1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Query by companyName #1",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs?companyName=Tech",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									],
									"query": [
										{
											"key": "companyName",
											"value": "Tech"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Query by companyName #2",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs?companyName=Software",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									],
									"query": [
										{
											"key": "companyName",
											"value": "Software"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Query jobTitle by name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs?jobTitle=Cloud",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									],
									"query": [
										{
											"key": "jobTitle",
											"value": "Cloud"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Query job by skill ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs?skills={{skillId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									],
									"query": [
										{
											"key": "skills",
											"value": "{{skillId1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid MongDB ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs/{{invalidJobId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{invalidJobId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Nonexistant ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs/{{nonexistantJobId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{nonexistantJobId1}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "200 - Update jobTitle",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobTitle\": \"IT Manager\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId2}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "200 - Update applicationStatus",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"salary\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId2}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "200 - Update applicationStatus Copy",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"skills\": [\"HTML\", \"CSS\", \"Google Cloud\", \"AWS\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId2}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Input Validation check",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobType\": \"{{invalidJobType}}}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - No ID found in URL",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"companyName\": \"New Company\",\r\n    \"applicationStatus\": \"Interviewing\",\r\n    \"jobType\": \"Full-Time\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid MongoDB ID format",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"salary\": {{salary2}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{invalidJobId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{invalidJobId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Nonexistant ID",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs/{{nonexistantJobId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{nonexistantJobId1}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "204 - Delete Job 3 by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/:id",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{jobId3}}"
										}
									]
								},
								"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
							},
							"response": []
						},
						{
							"name": "400 - No ID found in URL",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid MongoDB ID format",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs/{{invalidJobId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{invalidJobId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Nonexistant ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs/{{nonexistantJobId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{nonexistantJobId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ALL JOBS",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/jobs/delete-all-jobs",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"delete-all-jobs"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add Skill to Job",
					"item": [
						{
							"name": "Add skillId1 to jobId1",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"skillId\": \"{{skillId1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId1}}/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId1}}",
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add skillId2 to jobId1",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"skillId\": \"{{skillId2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId1}}/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId1}}",
										"skills"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add Contact to Job",
					"item": [
						{
							"name": "Add contactId1 to job 1",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contactId\": \"{{contactId1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId1}}/contacts",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId1}}",
										"contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add contactId2 to job 1",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contactId\": \"{{contactId2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId1}}/contacts",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId1}}",
										"contacts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove Skill from Job",
					"item": [
						{
							"name": "Delete Skill 1 from Job 1",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"skillId\": \"{{skillId1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId1}}/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId1}}",
										"skills"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove Contact from Job",
					"item": [
						{
							"name": "Delete Contact 1 from Job 1",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contactId\": \"{{contactId1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/jobs/{{jobId1}}/contacts",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"jobs",
										"{{jobId1}}",
										"contacts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Skills",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "Create Skill 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"skillId1\", respJSON._id);\r",
											"    console.log(\"Skill Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"Skill Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"JavaScript\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Skill 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"skillId2\", respJSON._id);\r",
											"    console.log(\"Skill Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"Skill Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Python\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Duplicate Skill name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"skillId2\", respJSON._id);\r",
											"    console.log(\"Skill Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"Skill Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Python\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid Skill - 0 chars",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"skillId2\", respJSON._id);\r",
											"    console.log(\"Skill Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"Skill Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid Skill - <20 chars",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"skillId3\", respJSON._id);\r",
											"    console.log(\"Skill Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"Skill Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{longSkillName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "GET ALL Skills",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Skill 2 by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills/{{skillId2}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{skillId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Skill by Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills?name={{skill2}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills"
									],
									"query": [
										{
											"key": "name",
											"value": "{{skill2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid MongoDB ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills/{{invalidDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{invalidDBID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Nonexistant ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills/{{nonexistantDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{nonexistantDBID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Invalid Skill Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills?name={{nonexistantSkill}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills"
									],
									"query": [
										{
											"key": "name",
											"value": "{{nonexistantSkill}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "200 - Update Skill 1",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"JavaScript2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills/{{skillId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{skillId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Validation check - 0 chars",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills/{{skillId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{skillId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Validation check - >20 chars",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{longSkillName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills/{{skillId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{skillId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - No Id found in URL",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"JavaScript2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills/",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid MongoDB ID",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"JavaScript2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills/{{invalidDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{invalidDBID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Nonexistant ID",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"JavaScript2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/skills/{{nonexistantDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{nonexistantDBID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "204 - Delete Skill by Id #1",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills/{{skillId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{skillId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "204 - Delete Skill by Id #2",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills/{{skillId2}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{skillId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - No ID found in URL",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid MongDB ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills/{{invalidDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{invalidDBID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Nonexistant ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/skills/{{nonexistantDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"skills",
										"{{nonexistantDBID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Contacts",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "Create Contact 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"contactId1\", respJSON._id);\r",
											"    console.log(\"Contact Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"contact Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"{{firstName1}}}}\",\r\n  \"lastName\": \"{{lastName1}}}\",\r\n  \"company\": \"{{companyName1}}}}\",\r\n  \"position\": \"{{position1}}\",\r\n  \"email\": \"{{email1}}}}\",\r\n  \"phone\": \"{{phone1}}}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"contactId2\", respJSON._id);\r",
											"    console.log(\"Contact Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"contact Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"{{firstName2}}}}\",\r\n  \"lastName\": \"{{lastName2}}}\",\r\n  \"company\": \"{{company2}}}}\",\r\n  \"position\": \"{{position1}}\",\r\n  \"email\": \"{{email2}}}}\",\r\n  \"phone\": \"{{phone2}}}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 3 - no phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"contactId3\", respJSON._id);\r",
											"    console.log(\"Contact Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"contact Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"Luke\",\r\n  \"lastName\": \"Skywalker\",\r\n  \"company\": \"Star Wars Co.\",\r\n  \"position\": \"Hiring Manager\",\r\n  \"email\": \"luke.skywalker@aol.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid Contact - short",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"contactId2\", respJSON._id);\r",
											"    console.log(\"Contact Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"contact Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\",\r\n  \"company\": \"\",\r\n  \"position\": \"\",\r\n  \"email\": \"luke.skywalkeraol\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid Contact - long",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const respJSON = pm.response.json();\r",
											"\r",
											"// Save the job ID to the environment if it exists\r",
											"if (respJSON && respJSON._id) {\r",
											"    pm.environment.set(\"contactId2\", respJSON._id);\r",
											"    console.log(\"Contact Id saved:\", respJSON._id);\r",
											"} else {\r",
											"    console.error(\"contact Id not found in the response:\", respJSON);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"{{veryLongStr}}\",\r\n  \"lastName\": \"{{veryLongStr}}\",\r\n  \"company\": \"{{veryLongStr}}\",\r\n  \"position\": \"{{veryLongStr}}\",\r\n  \"email\": \"luke.skywalker@yahoo.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "GET ALL Contacts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/contacts",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Contact by Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/contacts/{{company2}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{company2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404- Invalid Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/contacts/:company",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										":company"
									],
									"variable": [
										{
											"key": "company",
											"value": "Doesn'tExist"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "200 - Update Contact 1 company",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"company\": \"Navistar\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts/{{contactId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{contactId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "200 - Update Contact 1 name",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"Stan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts/{{contactId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{contactId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Validation check - short",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\",\r\n  \"company\": \"\",\r\n  \"position\": \"\",\r\n  \"email\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts/{{contactId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{contactId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Validation check - long",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"{{veryLongStr}}\",\r\n  \"lastName\": \"{{veryLongStr}}\",\r\n  \"company\": \"{{veryLongStr}}\",\r\n  \"position\": \"{{veryLongStr}}\",\r\n  \"email\": \"{{veryLongStr}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts/{{contactId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{contactId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - No ID found in URL",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"Stan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts/",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid MongoDB ID",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"Stan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts/{{invalidDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{invalidDBID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404- Nonexistant ID",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"Stan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{app_url}}/api/contacts/{{nonexistantDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{nonexistantDBID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "204 - Delete Contact by Id #1",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/contacts/{{contactId1}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{contactId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "204 - Delete Contact by Id #2",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/contacts/{{contactId2}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{contactId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - No ID found in URL",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/contacts/",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "400 - Invalid MongoDB ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/contacts/{{invalidDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{invalidDBID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "404- Nonexistant ID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{app_url}}/api/contacts/{{nonexistantDBID}}",
									"host": [
										"{{app_url}}"
									],
									"path": [
										"api",
										"contacts",
										"{{nonexistantDBID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}